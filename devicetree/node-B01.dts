/******************************************************************
* Author        : German Mundinger
* Date          : 2022
******************************************************************/

/dts-v1/;
/plugin/;

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/pinctrl/am33xx.h>

#include "node-common.dtsi"


&{/chosen} {
    overlays {
        NODE_B01 = __TIMESTAMP__;
    };
};


// Door PIR
&am33xx_pinmux {
    door_pir_pin: pinmux_door_pir_pin {
        pinctrl-single,pins = <
            AM33XX_PADCONF(AM335X_PIN_GPMC_AD11, PIN_INPUT, MUX_MODE7)      // GPIO_27 (0[27])
        >;
    };
};

&ocp {
    door_pir_pinmux {
        compatible = "bone-pinmux-helper";
        pinctrl-0 = <&door_pir_pin>;
        pinctrl-names = "default";
        status = "okay";
    };
};


// Room PIR
&am33xx_pinmux {
    room_pir_pin: pinmux_room_pir_pin {
        pinctrl-single,pins = <
            AM33XX_PADCONF(AM335X_PIN_GPMC_AD15, PIN_INPUT, MUX_MODE7)      // GPIO_47 (1[15])
        >;
    };
};

&ocp {
    room_pir_pinmux {
        compatible = "bone-pinmux-helper";
        pinctrl-0 = <&room_pir_pin>;
        pinctrl-names = "default";
        status = "okay";
    };
};


// Light power
&am33xx_pinmux {
    light_power_pin: pinmux_light_power_pin {
        pinctrl-single,pins = <
            AM33XX_PADCONF(AM335X_PIN_ECAP0_IN_PWM0_OUT, PIN_OUTPUT, MUX_MODE7) // GPIO_7 (0[7])
        >;
    };
};

&ocp {
    light_power_pinmux {
        compatible = "bone-pinmux-helper";
        pinctrl-0 = <&light_power_pin>;
        pinctrl-names = "default";
        status = "okay";
    };
};


// USB power
&am33xx_pinmux {
    power_usb_pins: pinmux_power_usb_pins {
        pinctrl-single,pins = <
            AM33XX_PADCONF(AM335X_PIN_GPMC_AD13, PIN_OUTPUT, MUX_MODE7)     // GPIO_45 (1[13]) - HDMI display
            AM33XX_PADCONF(AM335X_PIN_GPMC_AD9, PIN_OUTPUT, MUX_MODE7)      // GPIO_23 (0[23]) - unused
        >;
    };
};

&ocp {
    power_usb_pinmux {
        compatible = "bone-pinmux-helper";
        pinctrl-0 = <&power_usb_pins>;
        pinctrl-names = "default";
        status = "okay";
    };
};


// Gas sensor
&tscadc {
    status = "okay";
    adc {
        ti,adc-channels = <3 5>;            // 3 - gas | 5 - photoresistor
        ti,chan-step-avg = <16 16>;
        ti,chan-step-opendelay = <152 152>;
        ti,chan-step-sampledelay = <0 0>;
    };
};

&am33xx_pinmux {
    power_gas_pins: pinmux_power_gas_pins {
        pinctrl-single,pins = <
            AM33XX_PADCONF(AM335X_PIN_GPMC_AD14, PIN_OUTPUT, MUX_MODE7)     // GPIO_46 (1[14])
        >;
    };
};

&ocp {
    power_gas_pinmux {
        compatible = "bone-pinmux-helper";
        pinctrl-0 = <&power_gas_pins>;
        pinctrl-names = "default";
        status = "okay";
    };
};


// Humidity sensor
&i2c2 {
    bme280@76 {
        status = "okay";
        compatible = "bosch,bme280";
        reg = <0x76>;
    };
};

&am33xx_pinmux {
    power_humidity_pins: pinmux_power_humidity_pins {
        pinctrl-single,pins = <
            AM33XX_PADCONF(AM335X_PIN_GPMC_CLK, PIN_OUTPUT_PULLUP, MUX_MODE7)      // GPIO_65 (2[1])
        >;
    };
};

&ocp {
    power_humidity_pinmux {
        compatible = "bone-pinmux-helper";
        pinctrl-0 = <&power_humidity_pins>;
        pinctrl-names = "default";
        status = "okay";
    };
};


// Particle sensor
&am33xx_pinmux {
    uart1_pins: pinmux_uart1_pins {
        pinctrl-single,pins = <
            AM33XX_PADCONF(AM335X_PIN_UART1_RXD, PIN_INPUT_PULLUP, MUX_MODE0)
            AM33XX_PADCONF(AM335X_PIN_UART1_TXD, PIN_OUTPUT_PULLDOWN, MUX_MODE0)
        >;
    };
};

&uart1 {
    pinctrl-names = "default";
    pinctrl-0 = <&uart1_pins>;

    status = "okay";
    symlink = "bone/uart/1";

    air-pollution-sensor {
        compatible = "plantower,pms7003";
    };
};

&am33xx_pinmux {
    power_particle_pins: pinmux_power_particle_pins {
        pinctrl-single,pins = <
            AM33XX_PADCONF(AM335X_PIN_GPMC_CSN0, PIN_OUTPUT, MUX_MODE7)     // GPIO_61 (1[29])
        >;
    };
};

&ocp {
    power_particle_pinmux {
        compatible = "bone-pinmux-helper";
        pinctrl-0 = <&power_particle_pins>;
        pinctrl-names = "default";
        status = "okay";
    };
};
